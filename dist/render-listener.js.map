{"version":3,"file":"render-listener.js","sourceRoot":"","sources":["../src/render-listener.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,UAAU;IAAvC;;QACc,aAAQ,GAAG,KAAK,CAAC;IAiB/B,CAAC;IAhBoB,MAAM;QACvB,OAAO,IAAI,CAAA;oBACK,IAAI,CAAC,eAAe;;WAE7B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY;0BAC1B,IAAI,CAAC,aAAa,sBAAsB,CAAC;IACjE,CAAC;IACO,eAAe,CAAC,CAAc;QACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC;SACrC;IACH,CAAC;IACO,aAAa;QACnB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;CACF,CAAA;AAjBa;IAAX,QAAQ,EAAE;gDAAkB;AADzB,cAAc;IADnB,aAAa,CAAC,iBAAiB,CAAC;GAC3B,cAAc,CAkBnB","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('render-listener')\nclass RenderListener extends LitElement {\n  @property() canCheck = false;\n  protected override render() {\n    return html`\n      <p @checked=${this._checkedHandler}><slot></slot></p>\n      <hr>\n      <p>${this.canCheck ? 'Allowing' : 'Preventing'} check</p>\n      <p><button @click=${this._clickHandler}>Toggle</button></p>`;\n  }\n  private _checkedHandler(e: CustomEvent) {\n    if (!this.canCheck) {\n      e.preventDefault();\n      e.detail.message = 'ðŸš« Prevented!!';\n    }\n  }\n  private _clickHandler() {\n    this.canCheck = !this.canCheck;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'render-listener': RenderListener;\n  }\n}\n"]}