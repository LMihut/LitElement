{"version":3,"file":"todo-list.js","sourceRoot":"","sources":["../src/todo-list.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,KAAK,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAG9D,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAAxC;;QAEU,cAAS,GAAG;YAClB,EAAC,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,KAAK,EAAC;YACzC,EAAC,IAAI,EAAE,oBAAoB,EAAE,QAAQ,EAAE,KAAK,EAAC;SAC9C,CAAC;IAuBJ,CAAC;IArBU,MAAM;QACb,OAAO,IAAI,CAAA;;;sBAGO,IAAI,CAAC,OAAO;;MAE5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA,OAAO,IAAI,CAAC,IAAI,OAAO,CAAC;;KAE1D,CAAC;IACJ,CAAC;IAKD,OAAO;QACL,IAAI,CAAC,SAAS,GAAG;YACf,GAAG,IAAI,CAAC,SAAS;YACjB,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC;SAC1C,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;IACxB,CAAC;CACF,CAAA;AA1BC;IADC,KAAK,EAAE;2CAIN;AAcF;IADC,KAAK,CAAC,QAAQ,CAAC;uCACS;AAnBd,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CA4BpB;SA5BY,QAAQ","sourcesContent":["import {html, LitElement} from 'lit';\nimport {customElement, query, state} from 'lit/decorators.js';\n\n@customElement('todo-list')\nexport class ToDoList extends LitElement {\n  @state()\n  private listItems = [\n    {text: 'Find some bugs', complete: false},\n    {text: 'Start learning Lit', complete: false},\n  ];\n\n  override render() {\n    return html`\n    <p>TODO List (without Events)</p>\n    <input id=\"input\"></input>\n    <button @click=\"${this.addItem}\">Add Item</button>\n    <ul>\n    ${this.listItems.map((item) => html`<li>${item.text}</li>`)}\n    </ul>\n    `;\n  }\n\n  @query('#input')\n  input!: HTMLInputElement;\n\n  addItem() {\n    this.listItems = [\n      ...this.listItems,\n      {text: this.input.value, complete: false},\n    ];\n    this.input.value = '';\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'todo-list': ToDoList;\n  }\n}\n"]}