{"version":3,"file":"todo-listener.js","sourceRoot":"","sources":["../src/todo-listener.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAGjE,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;QAEU,cAAS,GAAG;YAClB,EAAC,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,KAAK,EAAC;YACzC,EAAC,IAAI,EAAE,oBAAoB,EAAE,QAAQ,EAAE,KAAK,EAAC;SAC9C,CAAC;QACU,SAAI,GAAG,EAAE,CAAC;IAcxB,CAAC;IAboB,MAAM;QACvB,OAAO,IAAI,CAAA,eAAe,IAAI,CAAC,OAAO;;UAEhC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA,OAAO,IAAI,CAAC,IAAI,OAAO,CAAC;YACvD,CAAC;IACX,CAAC;IAEO,OAAO,CAAC,CAAc;QAC5B,IAAI,CAAC,SAAS,GAAG;YACf,GAAG,IAAI,CAAC,SAAS;YACjB,EAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAC;SACvC,CAAC;IACJ,CAAC;CACF,CAAA;AAlBC;IADC,KAAK,EAAE;+CAIN;AACU;IAAX,QAAQ,EAAE;0CAAW;AANlB,YAAY;IADjB,aAAa,CAAC,eAAe,CAAC;GACzB,YAAY,CAoBjB","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\n\n@customElement('todo-listener')\nclass TodoListener extends LitElement {\n  @state()\n  private listItems = [\n    {text: 'Find some bugs', complete: false},\n    {text: 'Start learning Lit', complete: false},\n  ];\n  @property() name = '';\n  protected override render() {\n    return html` <p @mytodo=${this.addTodo}><slot></slot></p>\n      <ul>\n        ${this.listItems.map((item) => html`<li>${item.text}</li>`)}\n      </ul>`;\n  }\n  \n  private addTodo(e: CustomEvent) {\n    this.listItems = [\n      ...this.listItems,\n      {text: e.detail.name, complete: false},\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'todo-listener': TodoListener;\n  }\n}\n"]}