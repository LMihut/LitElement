{"version":3,"file":"render-dispatcher.js","sourceRoot":"","sources":["../src/render-dispatcher.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAGxE,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,UAAU;IAAzC;;QAEU,cAAS,GAAG;YAClB,EAAC,IAAI,EAAE,gBAAgB,EAAE,QAAQ,EAAE,KAAK,EAAC;YACzC,EAAC,IAAI,EAAE,oBAAoB,EAAE,QAAQ,EAAE,KAAK,EAAC;SAC9C,CAAC;QACU,UAAK,GAAG,WAAW,CAAC;QAChC,mBAAc,GAAG,WAAW,CAAC;QACjB,YAAO,GAAG,IAAI,CAAC,cAAc,CAAC;IAyC5C,CAAC;IAtCoB,MAAM;QACvB,OAAO,IAAI,CAAA;;;sBAGO,IAAI,CAAC,UAAU;;MAE/B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA,OAAO,IAAI,CAAC,IAAI,OAAO,CAAC;;WAEpD,IAAI,CAAC,OAAO;KAClB,CAAC;IACJ,CAAC;IACO,UAAU,CAAC,CAAQ;QACzB,MAAM,MAAM,GAAG,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;QACvC,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;QACpG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,KAAK,CAAC,gBAAgB,EAAE;YAC1B,CAAC,CAAC,cAAc,EAAE,CAAC;SACpB;aAAM;YAAE,IAAI,CAAC,OAAO,EAAE,CAAA;SAAC;QACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,CAAC;IAEkB,OAAO;QACxB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa;YAChB,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC;IAKD,OAAO;QACL,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QACtB,IAAI,CAAC,SAAS,GAAG;YACf,GAAG,IAAI,CAAC,SAAS;YACjB,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC;SAC1C,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;IACxB,CAAC;CACF,CAAA;AA/CC;IADC,KAAK,EAAE;mDAIN;AACU;IAAX,QAAQ,EAAE;+CAAqB;AAEpB;IAAX,QAAQ,EAAE;iDAA+B;AA+B1C;IADC,KAAK,CAAC,QAAQ,CAAC;+CACS;AAvCrB,gBAAgB;IADrB,aAAa,CAAC,mBAAmB,CAAC;GAC7B,gBAAgB,CAiDrB","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, property, query, state} from 'lit/decorators.js';\n\n@customElement('render-dispatcher')\nclass RenderDispatcher extends LitElement {\n  @state()\n  private listItems = [\n    {text: 'Find some bugs', complete: false},\n    {text: 'Start learning Lit', complete: false},\n  ];\n  @property() label = 'Check me!';\n  defaultMessage = 'âœ… Allowed';\n  @property() message = this.defaultMessage;\n  private _resetMessage?: ReturnType<typeof setTimeout>;\n\n  protected override render() {\n    return html`\n    <p>TODO List (Communication btw. Events)</p>\n    <input id=\"input\"></input>\n    <button @click=\"${this._tryChange}\">Add Item</button>\n    <ul>\n    ${this.listItems.map((item) => html`<li>${item.text}</li>`)}\n    </ul>\n    <div>${this.message}</div>\n    `;\n  }\n  private _tryChange(e: Event) {\n    const detail = {message: this.message};\n    const event = new CustomEvent('checked', {detail, bubbles: true, composed: true, cancelable: true});\n    this.dispatchEvent(event);\n    if (event.defaultPrevented) {\n      e.preventDefault();\n    } else { this.addItem()}\n    this.message = detail.message;\n  }\n  \n  protected override updated() {\n    clearTimeout(this._resetMessage);\n    this._resetMessage =\n      setTimeout(() => this.message = this.defaultMessage, 1000);\n  }\n  \n  @query('#input')\n  input!: HTMLInputElement;\n\n  addItem() {\n    console.log('addItem')\n    this.listItems = [\n      ...this.listItems,\n      {text: this.input.value, complete: false},\n    ];\n    this.input.value = '';\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'render-dispatcher': RenderDispatcher;\n  }\n}\n"]}